@model List<SMT.Models.DB.Alumno.AsistenciaViewModal>
@{
    ViewBag.Title = "Asistencias";
    int sesion = 1;
    int page = 0, pageSize = 40;
}


<style>

    th.vertical{
        height:90px;
        overflow:visible;
    }

    th.vertical .ajustar{
        margin-left:-44px;
    }

    td, th {
        font-size:8px;
        padding: 1px;
        
        text-overflow:ellipsis;
    }

    ul{
        font-size:12px;
        page-break-after:always;
    }
</style>

@{

    var asistencias = Model.Skip(page * pageSize).Take(pageSize).ToList();
    while (asistencias.Count > 0)
    {
        @Html.Partial("_HeaderGrupo", (SMT.Models.DB.HeaderGrupoReporte)ViewBag.header)


        <table border="1">
            <thead>
                <tr>
                    <th class="text-center" style="vertical-align:bottom">Sesión</th>
                    <th class="text-center" style="vertical-align:bottom">Alumno</th>
                    @foreach (SMT.Models.DB.Alumno.AsistenciaViewModal ass in asistencias)
                    {
            <th class="vertical"><span class="ajustar">@ass.sesion</span></th>
                    }
                    <th class="vertical"><span class="ajustar">Asistencias</span></th>
                    <th class="vertical"><span class="ajustar">Inasistencias</span></th>
                </tr>
            </thead>
            <tbody>
                @foreach (SMT.Models.DB.Alumno.AlumnoSimple alu in ViewBag.alumnos)
                {
                    double faltas = 0, totalAsistencias = 0;
        <tr>
            <td class="text-center">@(sesion++)</td>
            <td>@alu.apellidoPaterno @alu.apellidoMaterno @alu.nombre</td>
            @foreach (SMT.Models.DB.Alumno.AsistenciaViewModal asistencia in asistencias)
            {
                var estado = asistencia.alumnos.Where(a => a.idAlumno.ToString() == alu.id).Select(a => a.estado).FirstOrDefault();

                <td class="text-center">
                    @switch (estado)
                    {
                        case 0:
                            faltas++;
                <span class="fa fa-close"></span>

                            break;
                        case 1:
                        default:
                            totalAsistencias++;
                <span class="fa fa-check"></span>
                            break;
                        case 2:
                            totalAsistencias += 0.5;
                <span>R</span>
                            break;
                        case 3:
                            totalAsistencias++;
                <span>S</span>
                            break;
                        case 4:
                            totalAsistencias++;
                <span>J</span>
                            break;
                    }
                </td>
            }
            <td class="text-center">@totalAsistencias</td>
            <td class="text-center">@faltas</td>
        </tr>
                }
            </tbody>
        </table>
        page++;
        asistencias = Model.Skip(page * pageSize).Take(pageSize).ToList();


        if (asistencias.Count == 0)
        {
            <ul>
                <li><span class="fa fa-check"></span>: Asistencia</li>
                <li><span class="fa fa-close"></span>: Inasistencias</li>
                <li>R: Retardo</li>
                <li>S: Suspensión</li>
                <li>J: Justificación</li>
            </ul>
        }
        else
        {
            <div class="break"></div>
            }
        }
    }


<script>
    setTimeout(function () {
        window.print();
    }, 800);
</script>