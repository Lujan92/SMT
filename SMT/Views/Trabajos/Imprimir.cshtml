﻿@model  List<SMT.Models.DB.Trabajo>
@using SMT.Models
@{
    ViewBag.Title = "Imprimir";
    int index = 1;
    int page = 1, pageSize = 30;
}

<style>

    table {
        zoom:0.8;
    }

    th.vertical{
        height:80px;
        white-space:nowrap;
        overflow:visible;
    }

    td, th {
        font-size: 8px;
        padding: 1px;
    }


</style>

@{
    List<SMT.Models.DB.Trabajo> list = new List<SMT.Models.DB.Trabajo>();

    while (true)
    {
        list = Model.OrderBy(i => i.IDTrabajo).Skip((page - 1) * pageSize).Take(pageSize).ToList();

        if (list.Count == 0)
        {
            break;
        }

        @Html.Partial("_HeaderGrupo",(SMT.Models.DB.HeaderGrupoReporte)ViewBag.header)
        <table border="1" class="break">
            <thead>
                <tr>
                    <th class="text-center" colspan="100">Trabajos</th>
                </tr>
                <tr>
                    <th class="text-center" style="vertical-align:bottom">#</th>
                    <th class="text-center" style="vertical-align:bottom">Alumno</th>
                    @foreach (SMT.Models.DB.Trabajo trabajo in list)
                    {
                        <th class="vertical"><span class="ajustar">@SMT.Models.Util.substring(trabajo.Nombre, 13)</span></th>
                    }
                    <th class="vertical"><span  class="ajustar">Entregados</span></th>
                    <th class="vertical"><span  class="ajustar">No Entregados</span></th>
                    <th class="text-center" style="width:30px">1/2</th>
                </tr>
            </thead>
            <tbody>
                @foreach (SMT.Models.DB.Alumno alumno in ViewBag.alumnos)
                {
                    string nombreCompleto = Util.UpperTitle(string.Join(" ", new[] {alumno.ApellidoPaterno, alumno.ApellidoMaterno, alumno.Nombre }).Trim());
                    <tr>
                        <td class="text-center">@index</td>
                        <td>@nombreCompleto</td>
                        @foreach (SMT.Models.DB.Trabajo trabajo in list)
                        {
                            int? valor = trabajo.TrabajoAlumno.Where(i => i.IDAlumno == alumno.IDAlumno).Select(i => i.Estado).FirstOrDefault();

                            <th class="text-center">
                                @switch (valor)
                                {
                                    case 0:
                                    default:
                                                @:&#10006;
                                    break;
                                    case 1:
                                                @:&#10004;
                                    break;
                                    case 2:
                                                @:&frac12;
                                    break;
                                }
                            </th>
                        }
                        <th class="text-center">@(list.Select(i => i.TrabajoAlumno.Where(a => a.IDAlumno == alumno.IDAlumno && a.Estado == 1).Count()).Sum())</th>
                        <th class="text-center">@(list.Select(i => i.TrabajoAlumno.Where(a => a.IDAlumno == alumno.IDAlumno && a.Estado == 0).Count()).Sum())</th>
                        <th class="text-center">@(list.Select(i => i.TrabajoAlumno.Where(a => a.IDAlumno == alumno.IDAlumno && a.Estado == 2).Count()).Sum())</th>
                    </tr>
                    index++;
                }
            </tbody>
            <tfoot>
                <tr>
                    <th colspan="2" class="text-center">Total</th>
                    @foreach (SMT.Models.DB.Trabajo trabajo in list)
                    {
                        var total = trabajo.TrabajoAlumno.Count(i => i.Estado == 1) + (trabajo.TrabajoAlumno.Count(i => i.Estado == 2) / 2.0);
                        <th class="text-center">@(total) </th>
                    }
                </tr>
                <tr>
                    <th colspan="2" class="text-center">Promedio</th>
                    @foreach (SMT.Models.DB.Trabajo trabajo in list)
                    {
                        double valor = trabajo.TrabajoAlumno.Select(i => (i.Estado == null ? 0 :i.Estado.Value)).Sum();
                        <th class="text-center">@(((trabajo.TrabajoAlumno.Where(i => i.Estado == 1).Count() * 10) + trabajo.TrabajoAlumno.Where(i => i.Estado == 2).Count() * 5) * 10 / trabajo.TrabajoAlumno.Count)%</th>
                    }
                </tr>
            </tfoot>
        </table>

            page++;
        
    }
}


<script>
    setTimeout(print, 800);
</script>