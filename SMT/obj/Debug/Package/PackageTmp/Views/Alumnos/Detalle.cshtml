@model SMT.Models.DB.Alumno
<link href="~/Content/plugins/cropper/cropper.css" rel="stylesheet" />
<script src="~/Scripts/cropper/cropper.min.js"></script>
<style>
    .centrado {
        text-align: center;
        vertical-align: middle;
    }

    .separacionIzq {
        border-left: 2px solid #DDDDDD;
    }
</style>
<div class="col-lg-12 col-md-12 col-xs-12 form-group">
    <h4>Datos del Alumno</h4>
    <div class="col-md-12 col-xs-12 form-group">
        <h4 style="text-align:center;">@Model.Grupos.Grado@Model.Grupos.Grupo @Model.Grupos.Materia @Model.Grupos.Escuela</h4>
    </div>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.LabelFor(model => model.Nombre)<br />
        @Model.Nombre
    </div>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.LabelFor(model => model.ApellidoPaterno)<br />
        @Model.ApellidoPaterno
    </div>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.LabelFor(model => model.ApellidoMaterno)<br />
        @Model.ApellidoMaterno
    </div>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.LabelFor(model => model.Curp)<br />
        @Model.Curp
    </div>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.LabelFor(model => model.EsUSAER)<br />
        @(Model.EsUSAER==true?"SI":"NO")
    </div>


</div>
<a class="btn btn-info btn-sm pull-right" onclick="window.history.back()">Regresar</a>
<div class="clearfix"></div>
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
                <a role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Asistencias
                </a>
            </h4>
        </div>
        <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <div id="tabla-asistencia">
                    @foreach (var m in Model.sesionArray.GroupBy(i => new { Bimestre = i.Bimestres.Bimestre, IDBimestre = i.IDBimestre })) {
                        <div class="col-md-12">
                            <table class="table table-hover table-stripped">
                                <thead>
                                    <tr>
                                        <th rowspan="2" class="centrado" style="width:100px;">Bimestre @m.Key.Bimestre</th>
                                        @foreach (var n in Model.AlumnoSesion.Where(i => i.Sesion.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.Sesion.Fecha)) {
                                            <th class="centrado separacionIzq">@SMT.Models.Util.toHoraMexico(n.Sesion.Fecha).ToString("dd/MM/yyyy")</th>
                                        }
                                        <th class="centrado">Total</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="centrado">
                                        <td></td>
                                        @{
                                            var contAsist = 0;
                                            foreach (var n in Model.AlumnoSesion.Where(i => i.Sesion.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.Sesion.Fecha)) {
                                                <td class="separacionIzq">
                                                    @switch (n.Estado) {
                                                        case 0:
                                                            <span class="fa fa-close"></span>
                                                            break;
                                                        case 1:
                                                            contAsist++;
                                                            <span class="fa fa-check"></span>
                                                            break;
                                                        case 2:
                                                            contAsist++;
                                                            <span>RET</span>
                                                            break;
                                                        case 3:
                                                            contAsist++;
                                                            <span>SUSP</span>
                                                            break;
                                                        case 4:
                                                            contAsist++;
                                                            <span>JUST</span>
                                                            break;
                                                    }
                                                </td>
                                            }
                                            <td>@contAsist</td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                                            }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingTwo">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Trabajos
                </a>
            </h4>
        </div>
        <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
            <div class="panel-body">
                <div id="tabla-trabajo">
                    @foreach (var m in Model.trabajoArray.GroupBy(i => new { Bimestre = i.Bimestres.Bimestre, IDBimestre = i.IDBimestre })) {
                        <div class="col-md-12">
                            <table class="table table-hover table-stripped">
                                <thead>
                                    <tr>
                                        <th rowspan="2" class="centrado" style="width:100px;">Bimestre @m.Key.Bimestre</th>
                                        @foreach (var n in Model.TrabajoAlumno.Where(i => i.Trabajo != null).Where(i => i.Trabajo.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.Trabajo.Fecha)) {
                                            <th class="centrado separacionIzq">@n.Trabajo.Nombre @SMT.Models.Util.toHoraMexico(n.Trabajo.Fecha.Value).ToString("dd/MM/yyyy")</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="centrado">
                                        <td></td>
                                        @foreach (var n in Model.TrabajoAlumno.Where(i => i.Trabajo != null).Where(i => i.Trabajo.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.Trabajo.Fecha)) {
                                            <td class="separacionIzq">
                                                @switch (n.Estado) {
                                                    case 0:
                                                        <span class="fa fa-close"></span>
                                                        break;
                                                    case 1:
                                                        <span class="fa fa-check"></span>
                                                        break;
                                                    case 2:
                                                        <span>&frac12;</span>
                                                        break;
                                                }
                                            </td>
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    }
                </div>

                <div id="tabla-trabajo">
                    @foreach (var m in Model.portafolioArray.GroupBy(i => new { Bimestre = i.Bimestres.Bimestre, IDBimestre = i.IDBimestre })) {
                        <div class="col-md-12">
                            <table class="table table-hover table-stripped">
                                <thead>
                                    <tr>
                                        <th rowspan="3" class="centrado" style="width:100px;">Bimestre @m.Key.Bimestre</th>
                                        @{
                                            foreach (var n in Model.PortafolioAlumno.Where(i => i.Portafolio != null).Where(i => i.Portafolio.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.Portafolio.FechaEntrega)) {
                                                var contadorCols = 0;
                                                if (n.Portafolio.Activo1) {
                                                    contadorCols++;
                                                }
                                                if (n.Portafolio.Activo2) {
                                                    contadorCols++;
                                                }
                                                if (n.Portafolio.Activo3) {
                                                    contadorCols++;
                                                }
                                                if (n.Portafolio.Activo4) {
                                                    contadorCols++;
                                                }
                                                if (n.Portafolio.Activo5) {
                                                    contadorCols++;
                                                }
                                                contadorCols++;
                                                <th class="centrado separacionIzq" colspan="@contadorCols">
                                                    @n.Portafolio.Nombre ( @n.Portafolio.TipoPortafolio.Nombre ) @SMT.Models.Util.toHoraMexico(n.Portafolio.FechaEntrega.Value).ToString("dd/MM/yyyy")
                                                </th>
                                            }
                                        }
                                    </tr>
                                    <tr>
                                        @foreach (var n in Model.PortafolioAlumno.Where(i => i.Portafolio != null).Where(i => i.Portafolio.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.Portafolio.FechaEntrega)) {
                                            if (n.Portafolio.Activo1) {
                                                <th class="centrado separacionIzq">@n.Portafolio.Aspecto1</th>
                                            }
                                            if (n.Portafolio.Activo2) {
                                                <th class="centrado">@n.Portafolio.Aspecto2</th>
                                            }
                                            if (n.Portafolio.Activo3) {
                                                <th class="centrado">@n.Portafolio.Aspecto3</th>
                                            }
                                            if (n.Portafolio.Activo4) {
                                                <th class="centrado">@n.Portafolio.Aspecto4</th>
                                            }
                                            if (n.Portafolio.Activo5) {
                                                <th class="centrado">@n.Portafolio.Aspecto5</th>
                                            }
                                            <th class="centrado">Total</th>
                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="centrado">
                                        <td></td>
                                        @{
                                            foreach (var n in Model.PortafolioAlumno.Where(i => i.Portafolio != null).Where(i => i.Portafolio.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.Portafolio.FechaEntrega)) {
                                                double? contPort = 0.0;
                                                if (n.Portafolio.Activo1) {
                                                    contPort += Convert.ToDouble(n.Aspecto1);
                                                    <td class="centrado separacionIzq">@n.Aspecto1</td>
                                                }
                                                if (n.Portafolio.Activo2) {
                                                    contPort += Convert.ToDouble(n.Aspecto2);
                                                    <td class="centrado">@n.Aspecto2</td>
                                                }
                                                if (n.Portafolio.Activo3) {
                                                    contPort += Convert.ToDouble(n.Aspecto3);
                                                    <td class="centrado">@n.Aspecto3</td>
                                                }
                                                if (n.Portafolio.Activo4) {
                                                    contPort += Convert.ToDouble(n.Aspecto4);
                                                    <td class="centrado">@n.Aspecto4</td>
                                                }
                                                if (n.Portafolio.Activo5) {
                                                    contPort += Convert.ToDouble(n.Aspecto5);
                                                    <td class="centrado">@n.Aspecto5</td>
                                                }
                                                double? lie = 0.0;
                                                if (contPort > 10) {
                                                    lie = 10;
                                                }
                                                else if (contPort < 5) {
                                                    lie = 5;
                                                }
                                                else {
                                                    lie = contPort;
                                                }
                                                <td class="centrado">@lie (@contPort)</td>
                                            }
                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                                            }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingFour">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
                    Exámenes
                </a>
            </h4>
        </div>
        <div id="collapseFour" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingFour">
            <div class="panel-body">
                <div id="tabla-trabajo">
                    @foreach (var m in Model.examenArray.GroupBy(i => new { Bimestre = i.Bimestres.Bimestre, IDBimestre = i.IDBimestre })) {
                        <div class="col-md-12">
                            <table class="table table-hover table-stripped">
                                <thead>
                                    <tr>
                                        <th rowspan="4" class="centrado" style="width:100px;">Bimestre @m.Key.Bimestre</th>
                                        @foreach (var n in Model.examenArray.Where(i => i.ExamenTema != null).Where(i => i.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.FechaEntrega)) {
                                            var contadorrowexamen = n.ExamenTema.Count()+1;
                                            <th class="centrado separacionIzq" colspan="@contadorrowexamen">
                                                @n.Tipo @SMT.Models.Util.toHoraMexico(n.FechaEntrega).ToString("dd/MM/yyyy")
                                            </th>
                                        }
                                    </tr>
                                    <tr>
                                        @{
                                            int contadorreg = 0;
                                            Guid idExamen = default(Guid);
                                            int total = Model.ExamenAlumno.Where(i => i.ExamenTema != null).Where(i => i.ExamenTema.Examen.IDBimestre == m.Key.IDBimestre).Count();
                                            foreach (var n in Model.ExamenAlumno.Where(i => i.ExamenTema != null).Where(i => i.ExamenTema.Examen.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.ExamenTema.Examen.FechaEntrega)) {
                                                contadorreg++;
                                                if ((idExamen != n.ExamenTema.IDExamen && idExamen != default(Guid)) || total == contadorreg) {
                                                    if (total == contadorreg) {
                                                        <th class="centrado separacionIzq">@n.ExamenTema.Nombre</th>
                                                    }
                                                    <th class="centrado separacionIzq">Total</th>
                                                }
                                                else {
                                                    idExamen = n.ExamenTema.IDExamen;
                                                    <th class="centrado separacionIzq">@n.ExamenTema.Nombre</th>
                                                }
                                            }

                                        }
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr class="centrado">
                                        <td></td>
                                        @{
                                            double? contadorExamen = 0.0;
                                            Guid idExamen2 = default(Guid);
                                            contadorreg = 0;
                                            total = Model.ExamenAlumno.Where(i => i.ExamenTema != null).Where(i => i.ExamenTema.Examen.IDBimestre == m.Key.IDBimestre).Count();
                                            foreach (var n in Model.ExamenAlumno.Where(i => i.ExamenTema != null).Where(i => i.ExamenTema.Examen.IDBimestre == m.Key.IDBimestre).OrderByDescending(i => i.ExamenTema.Examen.FechaEntrega)) {
                                                contadorreg++;
                                                if ((idExamen2 != n.ExamenTema.IDExamen && idExamen2 != default(Guid)) || contadorreg == total) {
                                                    if (total == contadorreg) {
                                                        <td class="centrado separacionIzq">@n.Calificacion</td>
                                                    }

                                                    double? lie = 0.0;
                                                    if (contadorExamen > 10) {
                                                        lie = 10;
                                                    }
                                                    else if (contadorExamen < 5) {
                                                        lie = 5;
                                                    }
                                                    else {
                                                        lie = contadorExamen;
                                                    }
                                                    <td class="centrado separacionIzq">@lie (@contadorExamen)</td>
                                                    contadorExamen = 0;
                                                }
                                                else {
                                                    idExamen2 = n.ExamenTema.IDExamen;
                                                    contadorExamen += n.Calificacion;
                                                    <td class="centrado separacionIzq">@n.Calificacion</td>
                                                }
                                            }

                                        }
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                                            }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingFive">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
                    Habilidades
                </a>
            </h4>
        </div>
        <div id="collapseFive" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingFive">
            <div class="panel-body">
                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.
            </div>
        </div>
    </div>
</div>


@section scripts{

    <script src="~/Scripts/apps/Control/ControlAlumno.js"></script>
    <script>
        var alumno = {
            nombre: '@Model.Nombre @Model.ApellidoPaterno @Model.ApellidoMaterno',
            id: "@(Model.IDAlumno)"
        };
        var _grupo = '@Model.IDGrupo';
        ControlAlumno.inicializar('#tabla-control');

        var generarNombreCache = function () {
            return 'detalle-habilidades-' + _grupo + '-' + _bimestre + '-' + alumno.id;
        }

        var habilidades = function () {
            return new Promise(function (success) {
                var _data = Cache.validarCache(generarNombreCache());
                if (_data == false) {
                    _data = [];
                    var consultaParcial = function (page) {
                        $.ajax({
                            url: '/Habilidades/cargarHabilidades',
                            data: {
                                grupo: _grupo,
                                page: page,
                                idalumno: alumno.id
                            },
                            error: function () {
                                success(_data);
                            },
                            success: function (data) {
                                _data = _data.concat(data);

                                Cache.almacenarCache(_data, generarNombreCache(), 20);
                                success(_data);

                            }
                        });
                    }

                    // Se inicia el cargado de datos por partes
                    consultaParcial(0);
                }
                else {
                    success(_data);
                }
            });
        }
    </script>

}
