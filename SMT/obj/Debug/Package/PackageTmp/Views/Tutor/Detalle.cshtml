@model SMT.ViewModels.TutorDetalleAlumnoViewModel
@{
    ViewBag.Title = "Detalle";
}

<div class="col-lg-12 col-md-12 col-xs-12 form-group">
    <h2 class="pull-right">
        @Html.ActionLink("Imprimir", "Imprimir", new { id = Model.IDAlumno }, new { @class = "print btn btn-default pull-right", target = "_blank" })
        @Html.ActionLink("Regresar", "Index", null, new { @class = "btn btn-primary pull-right" })
    </h2>
    <h2 class="pull-left">
        @Model.Materia @Model.Grado°@Model.Grupo @Model.Escuela 
        <span class="dropdown">
            <a href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" class="text-black">
                (Bimestre @Model.Bimestre)
                <span class="caret"></span>
            </a>
            <ul class="dropdown-menu" aria-labelledby="dLabel">
                @for (int i = 1; i <= 6; i++) {
                    <li><a data-link="@Url.Action("Detalle")/@Model.IDAlumno/@i" href="@Url.Action("Detalle")/@Model.IDAlumno/@i">Bimestre @i</a></li>
                }
            </ul>
        </span>
    </h2>
</div>

<div class="col-lg-12 col-md-12 col-xs-12 form-group">
    <h4>Datos del Alumno</h4>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.Label("Nombre completo")<br />
        @Model.NombreCompleto.ToUpper()
    </div>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.LabelFor(model => model.CURP)<br />
        @Model.CURP
    </div>
    <div class="col-md-6 col-xs-6 form-group">
        @Html.Label("Es NEE")<br />
        @(Model.EsUSAER == true ? "SI" : "NO")
    </div>


</div>
<div class="clearfix"></div>
<div class="panel-group" id="accordion" role="tablist" aria-multiselectable="true">
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingOne">
            <h4 class="panel-title">
                <a role="button"  class="btn btn-violeta" data-toggle="collapse" data-parent="#accordion" href="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
                    Asistencias
                </a>
            </h4>
        </div>
        <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
            <div class="panel-body">
                <div id="tabla-asistencia">
                    @if (!Model.Sesion?.Any() ?? true) {
                        <p>No se han registrado asistencias en este bimestre</p>
                    }
                    else {
                        foreach (var n in Model.Sesion) {
                            <div class="col-lg-1 col-md-2 col-sm-2 col-xs-3 text-center">
                                <p>@SMT.Models.Util.toHoraMexico(n.Sesion.Fecha).ToString("dd/MM/yyyy")</p>
                                <p>
                                    @switch (n.Estado) {
                                        case 0:
                                            <i class="fa fa-close"></i>
                                            break;
                                        case 1:
                                            <i class="fa fa-check"></i>
                                            break;
                                        case 2:
                                            <span>RET</span>
                                            break;
                                        case 3:
                                            <span>SUSP</span>
                                            break;
                                        case 4:
                                            <span>JUST</span>
                                            break;
                                    }
                                </p>
                            </div>
                        }
                        var sesiones = Model.Sesion.Where(s => s.Estado != 3).ToList();

                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                                <p>DÍAS DE CLASE</p>
                                <p>@sesiones.Count()</p>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                                <p>ASISTENCIAS</p>
                                <p>@sesiones.Count(s => s.Estado > 0)</p>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                                <p>FALTAS</p>
                                <p>@sesiones.Count(s => s.Estado == 0)</p>
                            </div>
                            <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                                <p>RETARDOS</p>
                                <p>@sesiones.Count(s => s.Estado == 2)</p>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingTwo">
            <h4 class="panel-title">
                <a class="collapsed" role="button" class="btn btn-vino" data-toggle="collapse" data-parent="#accordion" href="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                    Trabajos
                </a>
            </h4>
        </div>
        <div id="collapseTwo" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingTwo">
            <div class="panel-body">
                <div id="tabla-trabajo">
                    @if (!Model.Trabajo.Any() && !Model.Portafolio.Any()) {
                        <p>No se han registrado trabajos en este bimestre</p>
                    }

                    @foreach (var n in Model.Trabajo) {
                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-4 text-center">
                            <p>@n.Trabajo.Nombre @SMT.Models.Util.toHoraMexico(n.Trabajo.Fecha.Value).ToString("dd/MM/yyyy")</p>
                            <p>
                                @switch (n.Estado) {
                                    case 0:
                                        <i class="fa fa-close"></i>
                                        break;
                                    case 1:
                                        <i class="fa fa-check"></i>
                                        break;
                                    case 2:
                                        <span>&frac12;</span>
                                        break;
                                }
                            </p>
                        </div>
                    }

                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                            <p>TOTAL TRABAJOS</p>
                            <p>@Model.Trabajo.Count()</p>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                            <p>ENTREGADOS</p>
                            <p>@Model.Trabajo.Count(s => s.Estado == 1)</p>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                            <p>MEDIOS</p>
                            <p>@Model.Trabajo.Count(s => s.Estado == 2)</p>
                        </div>
                        <div class="col-lg-3 col-md-3 col-sm-3 col-xs-3 text-center">
                            <p>NO ENTREGADOS</p>
                            <p>@Model.Trabajo.Count(s => s.Estado == 0)</p>
                        </div>
                    </div>
                    
                    @if(Model.Portafolio.Any()) {
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            @foreach (var n in Model.Portafolio) {
                                double? contPort = 0.0;

                                <div class="col-lg-6 col-md-6 col-sm-6 col-xs-6">
                                    <table class="table table-condensed table-bordered">
                                        <tr>
                                            <th colspan="2" class="text-center">
                                                @n.Portafolio.Nombre (@n.Portafolio.TipoPortafolio.Nombre) @SMT.Models.Util.toHoraMexico(n.Portafolio.FechaEntrega.Value).ToString("dd/MM/yyyy")
                                            </th>
                                        </tr>
                                        <tr>
                                            <th>ASPECTO</th>
                                            <th>CALIFICACIÓN</th>
                                        </tr>
                                        @{
                                            if (n.Portafolio.Activo1) {
                                                contPort += Convert.ToDouble(n.Aspecto1);
                                                <tr class="text-center">
                                                    <td>@n.Portafolio.Aspecto1</td>
                                                    <td>@n.Aspecto1</td>
                                                </tr>
                                            }
                                            if (n.Portafolio.Activo2) {
                                                contPort += Convert.ToDouble(n.Aspecto1);
                                                <tr class="text-center">
                                                    <td>@n.Portafolio.Aspecto1</td>
                                                    <td>@n.Aspecto1</td>
                                                </tr>
                                            }
                                            if (n.Portafolio.Activo3) {
                                                contPort += Convert.ToDouble(n.Aspecto1);
                                                <tr class="text-center">
                                                    <td>@n.Portafolio.Aspecto1</td>
                                                    <td>@n.Aspecto1</td>
                                                </tr>
                                            }
                                            if (n.Portafolio.Activo4) {
                                                contPort += Convert.ToDouble(n.Aspecto1);
                                                <tr class="text-center">
                                                    <td>@n.Portafolio.Aspecto1</td>
                                                    <td>@n.Aspecto1</td>
                                                </tr>
                                            }
                                            if (n.Portafolio.Activo5) {
                                                contPort += Convert.ToDouble(n.Aspecto1);
                                                <tr class="text-center">
                                                    <td>@n.Portafolio.Aspecto1</td>
                                                    <td>@n.Aspecto1</td>
                                                </tr>
                                            }

                                            double? lie = 0.0;
                                            if (contPort > 10) {
                                                lie = 10;
                                            }
                                            else if (contPort < 5) {
                                                lie = 5;
                                            }
                                            else {
                                                lie = contPort;
                                            }

                                            <tr>
                                                <th>
                                                    TOTAL
                                                </th>
                                                <th class="text-center">
                                                    @lie (@contPort)
                                                </th>
                                            </tr>
                                        }
                                    </table>
                                </div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingFour">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseFour" aria-expanded="false" aria-controls="collapseFour">
                    Exámenes
                </a>
            </h4>
        </div>
        <div id="collapseFour" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingFour">
            <div class="panel-body">
                <div id="tabla-trabajo">
                    @if (!Model.Examenes.Any()) {
                        <p>
                            Aún no se han aplicado exámenes en este bimestre.
                        </p>
                    }
                    else {
                        foreach (var ex in Model.Examenes) {
                            var total = ex.Respuestas.Sum(r => r.Calificacion);
                            <div class="col-lg-3 col-md-3 col-sm-4 col-xs-6 text-center">
                                <table class="table table-striped table-bordered">
                                    <tr>
                                        <th colspan="2" class="text-center">
                                            @ex.Examen.Titulo 
                                            (@SMT.Models.Util.toHoraMexico(ex.Examen.FechaEntrega).ToString("dd/MM/yyyy"))
                                        </th>
                                    </tr>
                                    <tr>
                                        <th>TEMA</th>
                                        <th class="text-center">CALIF.</th>
                                    </tr>
                                    @foreach (var r in ex.Respuestas) {
                                        <tr>
                                            <td>@r.ExamenTema.Nombre</td>
                                            <td>@r.Calificacion</td>
                                        </tr>
                                    }
                                    <tr>
                                        <th>TOTAL</th>
                                        <th class="text-center">@(total < 5 ? "5" : total > 10 ? "10" : "" + total)</th>
                                    </tr>
                                </table>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingFive">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseFive" aria-expanded="false" aria-controls="collapseFive">
                    Habilidades
                </a>
            </h4>
        </div>
        <div id="collapseFive" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingFive">
            <div class="panel-body">
                @if (Model.Habilidades != null) {
                    <table data-tabla="habilidades" class="table table-bordered table-hover table-striped text-center icono-amarillo">
                        <thead>
                            <tr>
                                <th>Habilidad</th>
                                <th>Calificación</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="1000">
                                    <h4 style="text-align:left">Evaluación</h4>
                                </td>
                            </tr>
                            <tr>
                                <td>Autoevaluación</td>
                                <td>@(Model.Habilidades.Autoevaluacin)</td>
                            </tr>
                            <tr>
                                <td>
                                    Coevaluación
                                    @{ 
                                        Func<string, string> toHuman = cal => {
                                            return 
                                                cal == "S" ? "Siempre" :
                                                cal == "C" ? "Casi siempre" :
                                                cal == "E" ? "En ocasiones" :
                                                cal == "R" ? "Requiere apoyo" :
                                                "N/A";
                                        };
                                    }
                                </td>
                                <td>@(Model.Habilidades.Coevaluacion)</td>
                            </tr>
                            <tr>
                                <td colspan="1000">
                                    <h4 style="text-align:left">Comprensión de Lectura</h4>
                                </td>
                            </tr>
                            <tr>
                                <td>Conocimiento</td>
                                <td>@(toHuman(Model.Habilidades.Conocimiento))</td>
                            </tr>
                            <tr>
                                <td>Síntesis</td>
                                <td>@(toHuman(Model.Habilidades.Sintesis))</td>
                            </tr>
                            <tr>
                                <td>Argumentación</td>
                                <td>@(toHuman(Model.Habilidades.Argumentacion))</td>
                            </tr>
                            <tr>
                                <td colspan="1000">
                                    <h4 style="text-align:left">Apoyo</h4>
                                </td>
                            </tr>
                            <tr>
                                <td>Requiere Apoyo Lectura</td>
                                <td>@(Model.Habilidades.ApoyoLectura)</td>
                            </tr>
                            <tr>
                                <td>Requiere Apoyo Escritura</td>
                                <td>@(Model.Habilidades.ApoyoEscritura)</td>
                            </tr>
                            <tr>
                                <td>Requiere Apoyo Matemáticas</td>
                                <td>@(Model.Habilidades.ApoyoMatematicas)</td>
                            </tr>
                            <tr>
                                <td>Se involucra en clase</td>
                                <td>
                                    @(Model.Habilidades.SeInvolucraClase.HasValue ?
                                            Model.Habilidades.SeInvolucraClase.Value ? "Sí" : "No" :
                                            "N/A")
                                </td>
                            </tr>
                        </tbody>
                    </table>
                } else {
                    <p>
                        Aún no se han calificado las habilidades de este bimestre
                    </p>
                }
            </div>
        </div>
    </div>
    <div class="panel panel-default">
        <div class="panel-heading" role="tab" id="headingSix">
            <h4 class="panel-title">
                <a class="collapsed" role="button" data-toggle="collapse" data-parent="#accordion" href="#collapseSix" aria-expanded="false" aria-controls="collapseSix">
                    Rendimiento
                </a>
            </h4>
        </div>
        <div id="collapseSix" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingSix">
            <div class="panel-body">
                <div class="rendimiento col-lg-11 col-md-11 col-sm-11 col-xs-11">

                </div>
            </div>
        </div>
    </div>
</div>
@section styles {
<link href="~/Content/plugins/cropper/cropper.css" rel="stylesheet" />
<style>
    .panel-title a {
        display: block;
        padding: 10px 15px;
        margin: -10px -15px;
        text-decoration: none;
    }
    .centrado {
        text-align: center;
        vertical-align: middle;
    }

    .separacionIzq {
        border-left: 2px solid #DDDDDD;
    }
</style>
}

<script src="~/Scripts/highcharts.js"></script>
<script>
    var headers = @Html.Raw(Json.Encode(Model.Headers));
    var generarGraficaExamen = function (content, _data) {
        var data = [],
            labels = [];

        headers.map(function (e) {
            if (e.examen == true) {
                data.push({
                    name: e.name,
                    y: parseFloat(_data[e.key].toFixed(1))
                });
                labels.push(e.name);
            }
        });

        // Agregar 4 instrumentos
        var total = 0;
        headers.map(function (e) {
            if (e.instrumentos == true && total < 4) {
                data.push({
                    name: e.name,
                    y: parseFloat(_data[e.key].toFixed(1))
                });
                labels.push(e.name);
                total++;
            }
        });

        // Agregar los otros a mano
        var extras = {
            'promedioTrabajo': 'Trabajos',
            'promedioCoevaluacion': 'Coevaluación',
            'promedioAutoevaluacion': 'Autoevaluación'
        };

        for (var m in extras) {
            data.push({
                name: extras[m],
                y: parseFloat(_data[m].toFixed(1))
            });
            labels.push(extras[m]);
        }
        
        $(content).highcharts({
            chart: {
                type: 'line'
            },
            title: {
                text: 'Calificaciones de ' + '@Model.NombreCompleto'
            },
            xAxis: {
                categories: labels
            },
            credits: false,
            yAxis: {
                allowDecimals: false,
                title: {
                    text: 'Calificación'
                }
            },
            plotOptions: {
                line: {
                    dataLabels: {
                        enabled: true
                    },
                    enableMouseTracking: false
                }
            },
            tooltip: {
                formatter: function () {
                    return '<b>' + this.series.name + '</b>' +
                        this.point.y;
                }
            },
            series: [{
                name: 'Calificación',
                data: data
            }]
        });
    };

    generarGraficaExamen(".rendimiento", @Html.Raw(Json.Encode(Model.Desempeno)));
</script>